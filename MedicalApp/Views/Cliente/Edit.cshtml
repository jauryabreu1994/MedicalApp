@model MedicalApp.Models.Clientes.Cliente

@{
    ViewBag.Title = "Editar Paciente";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="panel panel-container ">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.FechaCreacion)
        @Html.HiddenFor(model => model.FechaModificacion)
        @Html.HiddenFor(model => model.Estado)
        @Html.HiddenFor(model => model.Eliminado)
        <div class="form-group">
            <label class="control-label col-md-2"> Código</label>
            <div class="col-md-9">
                @Html.EditorFor(model => model.ClienteId, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Apellido, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.Apellido, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2"> Cedula o RNC</label>
            <div class="col-md-9">
                @Html.EditorFor(model => model.Identificacion, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Fecha de Nacimiento</label>
            <div class="col-md-9">
                @Html.EditorFor(model => model.FechaNacimiento, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2"> Nombre Fiscal</label>
            <div class="col-md-9">
                @Html.EditorFor(model => model.NombreFiscal, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">País</label>
            <div class="col-md-9">
                @Html.DropDownList("PaisId", null, htmlAttributes: new { @class = "form-control", autocomplete = "off" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Ciudad</label>
            <div class="col-md-9">
                <select id="CiudadId" name="CiudadId" class="form-control"></select>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Dirección</label>
            <div class="col-md-9">
                @Html.EditorFor(model => model.Direccion, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Correo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.Correo, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Teléfono</label>
            <div class="col-md-9">
                @Html.EditorFor(model => model.Telefono, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Genero, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-9">
                @Html.EnumDropDownListFor(model => model.Genero, htmlAttributes: new { @class = "form-control", autocomplete = "off" })
            </div>
        </div>

        <div class="container">
            <div class="row">
                <div class="col text-center">

                    <input type="button" value="Volver Atrás" class="btn btn-warning" onclick="location.href='@Url.Action("Index", "Cliente") '" />
                    <input type="submit" value="Guardar" class="btn btn-info" onclick="return confirm('¿Seguro que desea editar el Paciente?')" />
                </div>
            </div>
        </div><br />
    </div>
    }
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script>
        $(function () {
            $("#Eliminado").change(function () {
                if ($(this).val() === 'on') {
                    $(this).prop('checked', true);
                }
            });
        });
        $(function () {
            $("#PaisId").change(function () {
                var id = $(this).val();
                if (id !== '')
                    getCiudad(id, false);
            });
        });

        $(document).ready(function () {

            var id = $('#PaisId').val();
            console.log(id);
            if(id !== '')
                getCiudad(id, true);
        });

        function getCiudad(id, isLoad) {
            $("#CiudadId").empty();
            $.get("/Usuario/Ciudad_Bind", { paisId: id }, function (data) {
                var lines = "<option>--- Seleccionar Ciudad ---</option>";
                $.each(data, function (i, valor) {
                    lines += "<option value=" + valor.Value + ">" + valor.Text + "</option>";
                });
                $("#CiudadId").html(lines);
                if (isLoad === true) {
                    $("#CiudadId").val(@Model.CiudadId);
                }
            });
        }
</script>